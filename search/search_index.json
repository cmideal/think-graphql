{
    "docs": [
        {
            "location": "/",
            "text": "\u5173\u4e8e\n\n\n\u4e3a ThinkPHP 5 \u6253\u9020\u7684\u66f4\u597d\u7684GraphQL SDK\u3002\n\n\n\u5173\u4e8eGraphQL\n\n\nGraphQL \u662f\u4e00\u4e2a\u7531Facebook\u63d0\u51fa\u7684\u5e94\u7528\u5c42\u67e5\u8be2\u8bed\u8a00\uff0c\u5b83\u65e8\u5728\u66ff\u4ee3REST\u548cSOAP API\u3002\n\n\n\u4f7f\u7528\u5b83\uff0c\u4f60\u53ef\u4ee5\u4e0d\u5fc5\u56e0\u4e3a\u5ba2\u6237\u7aef\u6570\u636e\u9700\u6c42\u7684\u53d8\u66f4\u800c\u6539\u53d8\u4f60\u7684\u540e\u7aef. \u8fd9\u89e3\u51b3\u4e86\u7ba1\u7406REST API\u4e2d\u7684\u6700\u5927\u7684\u95ee\u9898\u3002\n\n\n\u5173\u4e8ethink-graphql\n\n\nthink-graphql\u662f\u5bf9\ngraphql-php\n\u5728 ThinkPHP5.1 \u7684\u57fa\u7840\u4e0a\u7684\u4e8c\u6b21\u5c01\u88c5\uff0c\u9488\u5bf9\u4e8e ThinkPHP5.1 \u505a\u4e86\u5927\u91cf\u7684\u4f18\u5316\uff0c\u4f7f\u5f97\u4f60\u53ef\u4ee5\u66f4\u4f18\u96c5\u7684\u5f00\u53d1 GraphQL \u7c7b\u578b\u7684API\u3002\n\n\n\u73af\u5883\u8981\u6c42\n\n\n\n\nphp >= 7.0\n\n\nthinkphp => 5.1\n\n\n\n\nGitHub\n\n\n\u9879\u76ee\u6e90\u7801\u6258\u7ba1\u5728\nGithub\u4e0a\n\u3002",
            "title": "\u5173\u4e8e"
        },
        {
            "location": "/#_1",
            "text": "\u4e3a ThinkPHP 5 \u6253\u9020\u7684\u66f4\u597d\u7684GraphQL SDK\u3002",
            "title": "\u5173\u4e8e"
        },
        {
            "location": "/#graphql",
            "text": "GraphQL \u662f\u4e00\u4e2a\u7531Facebook\u63d0\u51fa\u7684\u5e94\u7528\u5c42\u67e5\u8be2\u8bed\u8a00\uff0c\u5b83\u65e8\u5728\u66ff\u4ee3REST\u548cSOAP API\u3002  \u4f7f\u7528\u5b83\uff0c\u4f60\u53ef\u4ee5\u4e0d\u5fc5\u56e0\u4e3a\u5ba2\u6237\u7aef\u6570\u636e\u9700\u6c42\u7684\u53d8\u66f4\u800c\u6539\u53d8\u4f60\u7684\u540e\u7aef. \u8fd9\u89e3\u51b3\u4e86\u7ba1\u7406REST API\u4e2d\u7684\u6700\u5927\u7684\u95ee\u9898\u3002",
            "title": "\u5173\u4e8eGraphQL"
        },
        {
            "location": "/#think-graphql",
            "text": "think-graphql\u662f\u5bf9 graphql-php \u5728 ThinkPHP5.1 \u7684\u57fa\u7840\u4e0a\u7684\u4e8c\u6b21\u5c01\u88c5\uff0c\u9488\u5bf9\u4e8e ThinkPHP5.1 \u505a\u4e86\u5927\u91cf\u7684\u4f18\u5316\uff0c\u4f7f\u5f97\u4f60\u53ef\u4ee5\u66f4\u4f18\u96c5\u7684\u5f00\u53d1 GraphQL \u7c7b\u578b\u7684API\u3002",
            "title": "\u5173\u4e8ethink-graphql"
        },
        {
            "location": "/#_2",
            "text": "php >= 7.0  thinkphp => 5.1",
            "title": "\u73af\u5883\u8981\u6c42"
        },
        {
            "location": "/#github",
            "text": "\u9879\u76ee\u6e90\u7801\u6258\u7ba1\u5728 Github\u4e0a \u3002",
            "title": "GitHub"
        },
        {
            "location": "/started/",
            "text": "\u5f00\u59cb\n\n\n\u8bf4\u660e\n\n\n\n\n\u4f7f\u7528GraphQL\u9700\u8981\u60a8\u4e8b\u5148\u4e86\u89e3GraphQL\u7684\u8fd0\u4f5c\u673a\u5236\uff0c\u8bf7\u5148\u9605\u8bfb\nGraphQL\u5b98\u65b9\u6587\u6863\n\u3002\n\n\n\u672c\u9879\u76ee\u662f\u5728\ngraphql-php\n\u7684\u57fa\u7840\u4e0a\u4e8c\u6b21\u5c01\u88c5\uff0c\u6240\u6709\u7684Type\u90fd\u5b8c\u5168\u517c\u5bb9\ngraphql-php\n\u3002\n\n\n\u5728\u4f7f\u7528\u524d\u5efa\u8bae\u60a8\u9605\u8bfb\u6587\u6863\u3001\u67e5\u770bDemo\uff08\u6b63\u5728\u5f00\u53d1\uff09\u6765\u4e86\u89e3\u4f7f\u7528\u65b9\u6cd5\u3002\n\n\n\n\n\u5b89\u88c5\n\n\n$ composer require smilecc/think-graphql:dev-master\n\n\n\n\n\u6ce8\u610f\uff1a\u7531\u4e8e ThinkPHP 5.1 \u5bf9\u6bd4 5.0 \u6709\u8f83\u5927\u6539\u53d8\uff0c\u6240\u4ee5\u76ee\u524d\u53ea\u652f\u6301\u65b0\u7248 5.1\u3002\n\n\n\u4f7f\u7528\n\n\n\u9996\u5148\u9700\u8981\u5728\n/application/command.php\n\u4e2d\u589e\u52a0\u4e00\u4e2a\u6307\u4ee4\u3002\n\n\n<?php\n\nreturn [\n    'smilecc\\think\\GraphQLCommand'\n];\n\n\n\n\n\u7136\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u521d\u59cb\u5316\u6846\u67b6\n\n\n$ php think graph init\n\n\n\n\n\u8fd0\u884c\u8be5\u547d\u4ee4\u4e4b\u540e\u5982\u679c\u63d0\u793a\u521d\u59cb\u5316\u6210\u529f\uff0c\u5219\u53ef\u4ee5\u5728\n/config/graph.php\n\u770b\u5230\u751f\u6210\u51fa\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u53ca\u5728\n/application/http/graph\n\u6587\u4ef6\u5939\u4e0b\u751f\u6210\u51fa\u7684\u5b9e\u4f8b\u9879\u76ee\u3002\n\n\n\u5728\u521d\u59cb\u5316\u5b8c\u6bd5\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528GraphQL\u7684\u6d4b\u8bd5\u5de5\u5177\u8bf7\u6c42\nhttp://localhost/api/graph\n\u8fdb\u884c\u5c1d\u8bd5\uff0c\u6b63\u786e\u5b89\u88c5\u7684\u60c5\u51b5\u4e0b\u4f1a\u6709\u5982\u4e0b\u7684\u54cd\u5e94\u3002\n\n\nQuery\u5185\u5bb9\uff1a\n\n\n{\n  user(id: 1){\n    id\n    nickname\n    created_time\n  }\n}\n\n\n\n\n\u54cd\u5e94\u5185\u5bb9\uff1a\n\n\n{\n  \"data\": {\n    \"user\": {\n      \"id\": \"1\",\n      \"nickname\": \"TestUser\",\n      \"created_time\": \"1533028910\"\n    }\n  }\n}",
            "title": "\u5f00\u59cb"
        },
        {
            "location": "/started/#_1",
            "text": "",
            "title": "\u5f00\u59cb"
        },
        {
            "location": "/started/#_2",
            "text": "\u4f7f\u7528GraphQL\u9700\u8981\u60a8\u4e8b\u5148\u4e86\u89e3GraphQL\u7684\u8fd0\u4f5c\u673a\u5236\uff0c\u8bf7\u5148\u9605\u8bfb GraphQL\u5b98\u65b9\u6587\u6863 \u3002  \u672c\u9879\u76ee\u662f\u5728 graphql-php \u7684\u57fa\u7840\u4e0a\u4e8c\u6b21\u5c01\u88c5\uff0c\u6240\u6709\u7684Type\u90fd\u5b8c\u5168\u517c\u5bb9 graphql-php \u3002  \u5728\u4f7f\u7528\u524d\u5efa\u8bae\u60a8\u9605\u8bfb\u6587\u6863\u3001\u67e5\u770bDemo\uff08\u6b63\u5728\u5f00\u53d1\uff09\u6765\u4e86\u89e3\u4f7f\u7528\u65b9\u6cd5\u3002",
            "title": "\u8bf4\u660e"
        },
        {
            "location": "/started/#_3",
            "text": "$ composer require smilecc/think-graphql:dev-master  \u6ce8\u610f\uff1a\u7531\u4e8e ThinkPHP 5.1 \u5bf9\u6bd4 5.0 \u6709\u8f83\u5927\u6539\u53d8\uff0c\u6240\u4ee5\u76ee\u524d\u53ea\u652f\u6301\u65b0\u7248 5.1\u3002",
            "title": "\u5b89\u88c5"
        },
        {
            "location": "/started/#_4",
            "text": "\u9996\u5148\u9700\u8981\u5728 /application/command.php \u4e2d\u589e\u52a0\u4e00\u4e2a\u6307\u4ee4\u3002  <?php\n\nreturn [\n    'smilecc\\think\\GraphQLCommand'\n];  \u7136\u540e\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u521d\u59cb\u5316\u6846\u67b6  $ php think graph init  \u8fd0\u884c\u8be5\u547d\u4ee4\u4e4b\u540e\u5982\u679c\u63d0\u793a\u521d\u59cb\u5316\u6210\u529f\uff0c\u5219\u53ef\u4ee5\u5728 /config/graph.php \u770b\u5230\u751f\u6210\u51fa\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u53ca\u5728 /application/http/graph \u6587\u4ef6\u5939\u4e0b\u751f\u6210\u51fa\u7684\u5b9e\u4f8b\u9879\u76ee\u3002  \u5728\u521d\u59cb\u5316\u5b8c\u6bd5\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528GraphQL\u7684\u6d4b\u8bd5\u5de5\u5177\u8bf7\u6c42 http://localhost/api/graph \u8fdb\u884c\u5c1d\u8bd5\uff0c\u6b63\u786e\u5b89\u88c5\u7684\u60c5\u51b5\u4e0b\u4f1a\u6709\u5982\u4e0b\u7684\u54cd\u5e94\u3002  Query\u5185\u5bb9\uff1a  {\n  user(id: 1){\n    id\n    nickname\n    created_time\n  }\n}  \u54cd\u5e94\u5185\u5bb9\uff1a  {\n  \"data\": {\n    \"user\": {\n      \"id\": \"1\",\n      \"nickname\": \"TestUser\",\n      \"created_time\": \"1533028910\"\n    }\n  }\n}",
            "title": "\u4f7f\u7528"
        },
        {
            "location": "/config/",
            "text": "\u914d\u7f6e\n\n\n\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\n/config/graph.php\n\u3002\n\n\n\u9ed8\u8ba4\u4e3a\u5982\u4e0b\u5185\u5bb9\uff1a\n\n\n<?php\n\nreturn [\n    'types' => [\n        'graph' => [\n            'query' => \\app\\http\\graph\\QueryType::class\n        ],\n        'user' => [\n            'query' => \\app\\http\\graph\\User\\UserType::class\n        ]\n    ],\n    'schema' => [\n        'graph'\n    ],\n    'routePrefix' => 'api/'\n];\n\n\n\n\n\n\n\n\n\n\n\u914d\u7f6e\u9879\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\ntypes\n\n\n\u6240\u6709GraphQL\u7684Type\n\n\n\n\n\n\nschema\n\n\n\u5b9a\u4e49\u5165\u53e3Type\n\n\n\n\n\n\nroutePrefix\n\n\n\u8def\u7531\u524d\u7f00\n\n\n\n\n\n\n\n\ntypes\n\n\n\u7528\u4e8e\u5b9a\u4e49\u4f60\u5728\u9879\u76ee\u4e2d\u6240\u4f7f\u7528\u7684Types\uff0c\u4f8b\u5982\n\n\n'types' => [\n    'user' => [\n        'query' => \\app\\http\\graph\\UserType::class\n        'mutation' => \\app\\http\\graph\\UserMutationType::class\n    ]\n]\n\n\n\n\n\u6b64\u65f6\u5728\u6b64\u5b9a\u4e49\nuser\n\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\nTypes::user()\n\u83b7\u53d6\u8fd9\u4e2aType\uff0c\u4f8b\u5982\u3002\n\n\n<?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function fields()\n    {\n        return [\n            'user' => Types::user()\n        ];\n    }\n}\n\n\n\n\n\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8c03\u7528\nTypes::user()\n\u4f1a\u81ea\u52a8\u5b9e\u4f8b\u5316\u914d\u7f6e\u4e2d\nquery\n\u6240\u5bf9\u5e94\u7684class\uff0c\u800c\u5982\u679c\u9700\u8981\u5b9e\u4f8b\u5316\nmutation\n\u7684\u8bdd\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8c03\u7528\nTypes::user('mutation')\n\u5373\u53ef\u3002\n\n\nschema\n\n\nschema\n\u662f\u5b9a\u4e49\u5165\u53e3type\u7684\u6570\u7ec4\uff0c\u4f8b\u5982\u9ed8\u8ba4\u5185\u5bb9\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\uff1a\n\n\n'schema' => [\n    'graph'\n]\n\n\n\n\n\u8fd9\u65f6\u6211\u4eec\u7684\nhttp://example.com/api/graph\n\u5c31\u4f1a\u53d8\u6210\u4e00\u4e2a\u5165\u53e3\uff0c\u6211\u4eec\u5728\u8bbe\u7f6e\u5c06\u8fd9\u4e2a\u5730\u5740\nendpoint\n\uff0c\u5c31\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u8bf7\u6c42\u7684\u5165\u53e3\u4e86\u3002\n\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6709\u591a\u4e2a\u5165\u53e3\uff0c\u4f8b\u5982\n\n\n<?php\n\nreturn [\n    'types' => [\n        'user' => [\n            'query' => \\app\\http\\graph\\User\\UserType::class\n        ],\n        'admin' => [\n            'query' => \\app\\http\\graph\\Admin\\AdminType::class\n        ]\n    ],\n    'schema' => [\n        'user',\n        'admin'\n    ],\n    'routePrefix' => 'api/'\n];\n\n\n\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u4f1a\u62e5\u6709 \n/api/user\n \u548c \n/api/admin\n \u4e24\u4e2a\u5165\u53e3\u6765\u5904\u7406\u4e0d\u540c\u7684\u4e1a\u52a1\u4e86\u3002\n\n\nroutePrefix\n\n\nroutePrefix\n \u662f\u8def\u7531\u7684\u524d\u7f00\uff0c\u9ed8\u8ba4\u7684\u914d\u7f6e\u4e2d\u4f7f\u7528\u7684\u662f \napi/\n \uff0c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528 \napi/user\n \u6765\u4f5c\u4e3a\u5165\u53e3\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u559c\u6b22 \napi/\n \u53ef\u4ee5\u5c06\u5176\u81ea\u5b9a\u4e49\uff0c\u4f8b\u5982\u5c06\u5176\u4fee\u6539\u4e3a \nv1/\n \u540e\uff0c\u90a3\u6211\u4eec\u6211\u4eec\u7684\u5165\u53e3\u5c31\u4f1a\u53d8\u6210 \n/v1/user\n\u3002",
            "title": "\u914d\u7f6e"
        },
        {
            "location": "/config/#_1",
            "text": "\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e /config/graph.php \u3002  \u9ed8\u8ba4\u4e3a\u5982\u4e0b\u5185\u5bb9\uff1a  <?php\n\nreturn [\n    'types' => [\n        'graph' => [\n            'query' => \\app\\http\\graph\\QueryType::class\n        ],\n        'user' => [\n            'query' => \\app\\http\\graph\\User\\UserType::class\n        ]\n    ],\n    'schema' => [\n        'graph'\n    ],\n    'routePrefix' => 'api/'\n];     \u914d\u7f6e\u9879  \u8bf4\u660e      types  \u6240\u6709GraphQL\u7684Type    schema  \u5b9a\u4e49\u5165\u53e3Type    routePrefix  \u8def\u7531\u524d\u7f00",
            "title": "\u914d\u7f6e"
        },
        {
            "location": "/config/#types",
            "text": "\u7528\u4e8e\u5b9a\u4e49\u4f60\u5728\u9879\u76ee\u4e2d\u6240\u4f7f\u7528\u7684Types\uff0c\u4f8b\u5982  'types' => [\n    'user' => [\n        'query' => \\app\\http\\graph\\UserType::class\n        'mutation' => \\app\\http\\graph\\UserMutationType::class\n    ]\n]  \u6b64\u65f6\u5728\u6b64\u5b9a\u4e49 user \u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 Types::user() \u83b7\u53d6\u8fd9\u4e2aType\uff0c\u4f8b\u5982\u3002  <?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function fields()\n    {\n        return [\n            'user' => Types::user()\n        ];\n    }\n}  \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8c03\u7528 Types::user() \u4f1a\u81ea\u52a8\u5b9e\u4f8b\u5316\u914d\u7f6e\u4e2d query \u6240\u5bf9\u5e94\u7684class\uff0c\u800c\u5982\u679c\u9700\u8981\u5b9e\u4f8b\u5316 mutation \u7684\u8bdd\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u8c03\u7528 Types::user('mutation') \u5373\u53ef\u3002",
            "title": "types"
        },
        {
            "location": "/config/#schema",
            "text": "schema \u662f\u5b9a\u4e49\u5165\u53e3type\u7684\u6570\u7ec4\uff0c\u4f8b\u5982\u9ed8\u8ba4\u5185\u5bb9\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\uff1a  'schema' => [\n    'graph'\n]  \u8fd9\u65f6\u6211\u4eec\u7684 http://example.com/api/graph \u5c31\u4f1a\u53d8\u6210\u4e00\u4e2a\u5165\u53e3\uff0c\u6211\u4eec\u5728\u8bbe\u7f6e\u5c06\u8fd9\u4e2a\u5730\u5740 endpoint \uff0c\u5c31\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u8bf7\u6c42\u7684\u5165\u53e3\u4e86\u3002  \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6709\u591a\u4e2a\u5165\u53e3\uff0c\u4f8b\u5982  <?php\n\nreturn [\n    'types' => [\n        'user' => [\n            'query' => \\app\\http\\graph\\User\\UserType::class\n        ],\n        'admin' => [\n            'query' => \\app\\http\\graph\\Admin\\AdminType::class\n        ]\n    ],\n    'schema' => [\n        'user',\n        'admin'\n    ],\n    'routePrefix' => 'api/'\n];  \u8fd9\u6837\u6211\u4eec\u5c31\u4f1a\u62e5\u6709  /api/user  \u548c  /api/admin  \u4e24\u4e2a\u5165\u53e3\u6765\u5904\u7406\u4e0d\u540c\u7684\u4e1a\u52a1\u4e86\u3002",
            "title": "schema"
        },
        {
            "location": "/config/#routeprefix",
            "text": "routePrefix  \u662f\u8def\u7531\u7684\u524d\u7f00\uff0c\u9ed8\u8ba4\u7684\u914d\u7f6e\u4e2d\u4f7f\u7528\u7684\u662f  api/  \uff0c\u6b64\u65f6\u6211\u4eec\u4f7f\u7528  api/user  \u6765\u4f5c\u4e3a\u5165\u53e3\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u559c\u6b22  api/  \u53ef\u4ee5\u5c06\u5176\u81ea\u5b9a\u4e49\uff0c\u4f8b\u5982\u5c06\u5176\u4fee\u6539\u4e3a  v1/  \u540e\uff0c\u90a3\u6211\u4eec\u6211\u4eec\u7684\u5165\u53e3\u5c31\u4f1a\u53d8\u6210  /v1/user \u3002",
            "title": "routePrefix"
        },
        {
            "location": "/type/intro/",
            "text": "\u4ecb\u7ecd\n\n\n\u5728GraphQL\u4e2d\uff0c\u7c7b\u578b\uff08Type\uff09\u8d77\u5230\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\u3002\n\n\n\u5728\nthink-graphql\n\u4e2d\uff0c\u6240\u6709\u7684\u7c7b\u578b\u7236\u7c7b\u90fd\u5b9a\u4e49\u5728 \nsmilecc\\think\\Support\n \u4e2d\uff0c\u7c7b \nsmilecc\\think\\Support\\Types\n \u662f\u6240\u6709Type\u7684\u6ce8\u518c\u8868\u3002\n\n\n\u5b9a\u4e49\u7c7b\u578b\n\n\n<?php\nnamespace app\\http\\graph\\User;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass UserType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'UserType',\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'id' => Types::id()\n        ];\n    }\n}\n\n\n\n\n\u7c7b\u578b\u6ce8\u518c\u8868\n\n\n\u7c7b \nsmilecc\\think\\Support\\Types\n \u662f\u6240\u6709Type\u7684\u6ce8\u518c\u8868\uff0c\u901a\u8fc7\u8c03\u7528\u8be5\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u53ef\u83b7\u53d6\u5230\u6240\u6709\u7684\n\u5185\u7f6e\u7c7b\u578b\n\u548c\n\u81ea\u5b9a\u4e49\u7c7b\u578b\n\u3002\n\n\n<?php\n\nuse smilecc\\think\\Support\\Types;\n\nTypes::int();\nTypes::string();",
            "title": "\u4ecb\u7ecd"
        },
        {
            "location": "/type/intro/#_1",
            "text": "\u5728GraphQL\u4e2d\uff0c\u7c7b\u578b\uff08Type\uff09\u8d77\u5230\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\u3002  \u5728 think-graphql \u4e2d\uff0c\u6240\u6709\u7684\u7c7b\u578b\u7236\u7c7b\u90fd\u5b9a\u4e49\u5728  smilecc\\think\\Support  \u4e2d\uff0c\u7c7b  smilecc\\think\\Support\\Types  \u662f\u6240\u6709Type\u7684\u6ce8\u518c\u8868\u3002",
            "title": "\u4ecb\u7ecd"
        },
        {
            "location": "/type/intro/#_2",
            "text": "<?php\nnamespace app\\http\\graph\\User;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass UserType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'UserType',\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'id' => Types::id()\n        ];\n    }\n}",
            "title": "\u5b9a\u4e49\u7c7b\u578b"
        },
        {
            "location": "/type/intro/#_3",
            "text": "\u7c7b  smilecc\\think\\Support\\Types  \u662f\u6240\u6709Type\u7684\u6ce8\u518c\u8868\uff0c\u901a\u8fc7\u8c03\u7528\u8be5\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u53ef\u83b7\u53d6\u5230\u6240\u6709\u7684 \u5185\u7f6e\u7c7b\u578b \u548c \u81ea\u5b9a\u4e49\u7c7b\u578b \u3002  <?php\n\nuse smilecc\\think\\Support\\Types;\n\nTypes::int();\nTypes::string();",
            "title": "\u7c7b\u578b\u6ce8\u518c\u8868"
        },
        {
            "location": "/type/reg/",
            "text": "\u7c7b\u578b\u6ce8\u518c\u8868\n\n\n\u7c7b\u578b\u6ce8\u518c\u8868\u8d77\u5230\u6c47\u603b\u7c7b\u578b\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u548c\u7075\u6d3b\u7684\u4f7f\u7528\u5185\u7f6e\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002\n\n\n\u4f7f\u7528\n\n\n\u7c7b \nsmilecc\\think\\Support\\Types\n \u662f\u6240\u6709Type\u7684\u6ce8\u518c\u8868\uff0c\u901a\u8fc7\u8c03\u7528\u8be5\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u53ef\u83b7\u53d6\u5230\u6240\u6709\u7684\n\u5185\u7f6e\u7c7b\u578b\n\u548c\n\u81ea\u5b9a\u4e49\u7c7b\u578b\n\u3002\n\n\n<?php\n\nuse smilecc\\think\\Support\\Types;\n\n// \u5185\u7f6e\u7c7b\u578b\nTypes::int();\nTypes::string();\n\n// \u81ea\u5b9a\u4e49\u7c7b\u578b\nTypes::user();\nTypes::userPayment();\n\n\n\n\n\u6ce8\u518c\u81ea\u5b9a\u4e49\u7c7b\u578b\n\n\n\u7c7b\u578b\u6ce8\u518c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\uff0c\u914d\u7f6e\u6587\u4ef6\u4e00\u822c\u4f4d\u4e8e\n/config/graph.php\n\u3002\n\n\n\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u627e\u5230\u540d\u53eb \ntypes\n \u7684\u6570\u7ec4\uff0c\u65b0\u589e\u4e00\u4e2a\u6570\u7ec4\u6210\u5458\u3002\n\n\n'types' => [\n    'user' => \\app\\http\\graph\\UserType::class\n]\n\n\n\n\n\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u53eb \nuser\n \u7684Type\uff0c\u5b9a\u4e49\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u522b\u7684Type\u4e2d\u7528\u5982\u4e0b\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u3002\n\n\n<?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function fields()\n    {\n        return [\n            'user' => Types::user()\n        ];\n    }\n}\n\n\n\n\n\u5b9a\u4e49\u4e0d\u540c\u6307\u4ee4\u5bf9\u5e94\u7684Type\n\n\n\u5982\u679c\u60a8\u4e0d\u4e86\u89e3 \nGraphQL\u4e2d\u7684\u6307\u4ee4\n \u5efa\u8bae\u60a8\u5148\u9605\u8bfb\u4e00\u4e0b\u5b98\u65b9\u6587\u6863\u3002\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5728\u6211\u4eec\u5b9a\u4e49 \n'user' => \\app\\http\\graph\\UserType::class\n \u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528 \nTypes::user()\n \u6765\u8bbf\u95ee\u5b83\u65f6\uff0c\u5176\u5b9e\u662f\u9690\u5f0f\u7684\u901a\u8fc7 \nquery\n \u7684\u6307\u4ee4\u8bbf\u95ee\u5b83\uff0c\u6240\u4ee5 \nTypes::user()\n \u7b49\u540c\u4e8e \nTypes::user('query')\n \u3002\n\n\n'types' => [\n    'user' => [\n        'query' => \\app\\http\\graph\\UserType::class\n        'mutation' => \\app\\http\\graph\\UserMutationType::class\n    ]\n]\n\n\n\n\n\u4f46\u5982\u679c\u6211\u4eec\u9700\u8981\u8bbf\u95ee \nmutation\n \u6307\u4ee4\u6240\u5bf9\u5e94\u7684\u7c7b\u578b\u65f6\uff0c\u806a\u660e\u7684\u4f60\u770b\u5230\u4e0a\u9762\u7684\u4f8b\u5b50\u4e00\u5b9a\u53ef\u4ee5\u77e5\u9053\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528 \nTypes::user('mutation')\n \u5373\u53ef\u3002\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u914d\u7f6e\u4e2d\u5c06\u8fd9\u4e2a\u7c7b\u578b\u52a0\u5165\u5230 \nschema\n \u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684GraphQL\u6307\u4ee4\u5bf9\u5e94\u5230\u4e0d\u540c\u7684\u5165\u53e3\u7c7b\u578b\u4e86\u3002\n\n\n<?php\n\nreturn [\n    'types' => [\n        'graph' => [\n            'query' => \\app\\http\\graph\\QueryType::class\n            'mutation' => \\app\\http\\graph\\MutationType::class\n        ]\n    ],\n    'schema' => [\n        'graph'\n    ],\n    'routePrefix' => 'api/'\n];\n\n\n\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528GraphQL\u8bf7\u6c42\u6211\u4eec\u7684\u63a5\u53e3 \n/api/graph\n \uff0c\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u5c06\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u578b\u540d\u52a0\u5165\u5230 \nschema\n \u4e2d\uff0c\u8fd9\u4e2a\u7c7b\u578b\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5165\u53e3\u4e86\u3002\n\n\n\u4f7f\u7528 \nquery\n \u6307\u4ee4\u8bf7\u6c42\u65f6\u4f1a\u4f7f\u5f97 \n\\app\\http\\graph\\QueryType::class\n \u4f5c\u4e3a\u5165\u53e3\u3002\n\n\nquery {\n  user {\n    id\n  }\n}\n\n\n\n\n\u800c\u4f7f\u7528 \nmutation\n \u6307\u4ee4\u8bf7\u6c42\u65f6\u5219\u4f1a\u4f7f\u5f97 \n\\app\\http\\graph\\MutationType::class\n \u4f5c\u4e3a\u5165\u53e3\u3002\n\n\nmutation {\n  user {\n    id\n  }\n}",
            "title": "\u7c7b\u578b\u6ce8\u518c\u8868"
        },
        {
            "location": "/type/reg/#_1",
            "text": "\u7c7b\u578b\u6ce8\u518c\u8868\u8d77\u5230\u6c47\u603b\u7c7b\u578b\u7684\u4f5c\u7528\uff0c\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u548c\u7075\u6d3b\u7684\u4f7f\u7528\u5185\u7f6e\u7c7b\u578b\u548c\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002",
            "title": "\u7c7b\u578b\u6ce8\u518c\u8868"
        },
        {
            "location": "/type/reg/#_2",
            "text": "\u7c7b  smilecc\\think\\Support\\Types  \u662f\u6240\u6709Type\u7684\u6ce8\u518c\u8868\uff0c\u901a\u8fc7\u8c03\u7528\u8be5\u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u53ef\u83b7\u53d6\u5230\u6240\u6709\u7684 \u5185\u7f6e\u7c7b\u578b \u548c \u81ea\u5b9a\u4e49\u7c7b\u578b \u3002  <?php\n\nuse smilecc\\think\\Support\\Types;\n\n// \u5185\u7f6e\u7c7b\u578b\nTypes::int();\nTypes::string();\n\n// \u81ea\u5b9a\u4e49\u7c7b\u578b\nTypes::user();\nTypes::userPayment();",
            "title": "\u4f7f\u7528"
        },
        {
            "location": "/type/reg/#_3",
            "text": "\u7c7b\u578b\u6ce8\u518c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\uff0c\u914d\u7f6e\u6587\u4ef6\u4e00\u822c\u4f4d\u4e8e /config/graph.php \u3002  \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u627e\u5230\u540d\u53eb  types  \u7684\u6570\u7ec4\uff0c\u65b0\u589e\u4e00\u4e2a\u6570\u7ec4\u6210\u5458\u3002  'types' => [\n    'user' => \\app\\http\\graph\\UserType::class\n]  \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u53eb  user  \u7684Type\uff0c\u5b9a\u4e49\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u522b\u7684Type\u4e2d\u7528\u5982\u4e0b\u7684\u65b9\u5f0f\u4f7f\u7528\u5b83\u3002  <?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function fields()\n    {\n        return [\n            'user' => Types::user()\n        ];\n    }\n}",
            "title": "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7c7b\u578b"
        },
        {
            "location": "/type/reg/#type",
            "text": "\u5982\u679c\u60a8\u4e0d\u4e86\u89e3  GraphQL\u4e2d\u7684\u6307\u4ee4  \u5efa\u8bae\u60a8\u5148\u9605\u8bfb\u4e00\u4e0b\u5b98\u65b9\u6587\u6863\u3002  \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5728\u6211\u4eec\u5b9a\u4e49  'user' => \\app\\http\\graph\\UserType::class  \u4e4b\u540e\uff0c\u6211\u4eec\u4f7f\u7528  Types::user()  \u6765\u8bbf\u95ee\u5b83\u65f6\uff0c\u5176\u5b9e\u662f\u9690\u5f0f\u7684\u901a\u8fc7  query  \u7684\u6307\u4ee4\u8bbf\u95ee\u5b83\uff0c\u6240\u4ee5  Types::user()  \u7b49\u540c\u4e8e  Types::user('query')  \u3002  'types' => [\n    'user' => [\n        'query' => \\app\\http\\graph\\UserType::class\n        'mutation' => \\app\\http\\graph\\UserMutationType::class\n    ]\n]  \u4f46\u5982\u679c\u6211\u4eec\u9700\u8981\u8bbf\u95ee  mutation  \u6307\u4ee4\u6240\u5bf9\u5e94\u7684\u7c7b\u578b\u65f6\uff0c\u806a\u660e\u7684\u4f60\u770b\u5230\u4e0a\u9762\u7684\u4f8b\u5b50\u4e00\u5b9a\u53ef\u4ee5\u77e5\u9053\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528  Types::user('mutation')  \u5373\u53ef\u3002  \u63a5\u4e0b\u6765\u6211\u4eec\u5728\u914d\u7f6e\u4e2d\u5c06\u8fd9\u4e2a\u7c7b\u578b\u52a0\u5165\u5230  schema  \u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684GraphQL\u6307\u4ee4\u5bf9\u5e94\u5230\u4e0d\u540c\u7684\u5165\u53e3\u7c7b\u578b\u4e86\u3002  <?php\n\nreturn [\n    'types' => [\n        'graph' => [\n            'query' => \\app\\http\\graph\\QueryType::class\n            'mutation' => \\app\\http\\graph\\MutationType::class\n        ]\n    ],\n    'schema' => [\n        'graph'\n    ],\n    'routePrefix' => 'api/'\n];  \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528GraphQL\u8bf7\u6c42\u6211\u4eec\u7684\u63a5\u53e3  /api/graph  \uff0c\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u5c06\u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u578b\u540d\u52a0\u5165\u5230  schema  \u4e2d\uff0c\u8fd9\u4e2a\u7c7b\u578b\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5165\u53e3\u4e86\u3002  \u4f7f\u7528  query  \u6307\u4ee4\u8bf7\u6c42\u65f6\u4f1a\u4f7f\u5f97  \\app\\http\\graph\\QueryType::class  \u4f5c\u4e3a\u5165\u53e3\u3002  query {\n  user {\n    id\n  }\n}  \u800c\u4f7f\u7528  mutation  \u6307\u4ee4\u8bf7\u6c42\u65f6\u5219\u4f1a\u4f7f\u5f97  \\app\\http\\graph\\MutationType::class  \u4f5c\u4e3a\u5165\u53e3\u3002  mutation {\n  user {\n    id\n  }\n}",
            "title": "\u5b9a\u4e49\u4e0d\u540c\u6307\u4ee4\u5bf9\u5e94\u7684Type"
        },
        {
            "location": "/type/build-in/",
            "text": "\u5185\u7f6e\u7c7b\u578b\n\n\n\u5185\u7f6e\u7c7b\u578b\u6216\u79f0\u57fa\u7840\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7c7b\u578b\u57fa\u672c\u4e0a\u662f\u8bed\u8a00\u6784\u6210\u7684\u57fa\u7840\u7c7b\u578b\u3002\n\n\n\u53ef\u7528\u7c7b\u578b\n\n\n\n\n\n\n\n\n\u7c7b\u578b\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nid\n\n\nid\u7c7b\u578b\uff0c\u53ef\u89c6\u4e3a\u5b57\u7b26\u4e32\n\n\n\n\n\n\nint\n\n\n\u6574\u578b\n\n\n\n\n\n\nfloat\n\n\n\u6d6e\u70b9\u6570\n\n\n\n\n\n\nstring\n\n\n\u5b57\u7b26\u4e32\n\n\n\n\n\n\nboolean\n\n\n\u5e03\u5c14\u503c\n\n\n\n\n\n\nnonNull\n\n\n\u975e\u7a7a\u7c7b\u578b\n\n\n\n\n\n\nlistOf\n\n\n\u5217\u8868\u7c7b\u578b\n\n\n\n\n\n\n\n\n\u5176\u4e2d \nnonNull\n \u548c \nlistOf\n \u7c7b\u578b\u662f\u7528\u6765\u5b9a\u4e49\u5b50\u7c7b\u578b\u7279\u6027\u7684\uff0c\u4f8b\u5982\uff1a\n\n\n<?php\nuse smilecc\\think\\Support\\Types;\n\n// \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u5141\u8bb8\u4e3anull\u7684string\u7c7b\u578b\nTypes::nonNull(Types::string());\n\n// \u5b9a\u4e49\u4e00\u4e2aint\u7684\u6570\u7ec4\u7c7b\u578b\nTypes::listOf(Types::int());\n\n\n\n\n\u6ce8\u610f\n\n\n\n\nint\n \u7c7b\u578b\u572832\u4f4dphp\u4e2d\u4f1a\u662f \nint32\n \u7c7b\u578b\uff0c\u6240\u4ee5\u6ca1\u6709\u529e\u6cd5\u5b58\u50a8\u4f8b\u5982\u624b\u673a\u53f7\u7b49\u8f83\u957f\u6570\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528 \nfloat\n \u4ee3\u66ff\n\n\nid\n \u7c7b\u578b\u5728json\u8f93\u51fa\u4e2d\u8ba4\u4e3a\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u8fd9\u662f\u4e3a\u4e86\u9488\u5bf9\u4e8e\u4f8b\u5982 \nuuid\n \u7b49\u5b57\u7b26\u7c7b\u578b\u7684id",
            "title": "\u5185\u7f6e\u7c7b\u578b"
        },
        {
            "location": "/type/build-in/#_1",
            "text": "\u5185\u7f6e\u7c7b\u578b\u6216\u79f0\u57fa\u7840\u7c7b\u578b\uff0c\u8fd9\u4e9b\u7c7b\u578b\u57fa\u672c\u4e0a\u662f\u8bed\u8a00\u6784\u6210\u7684\u57fa\u7840\u7c7b\u578b\u3002",
            "title": "\u5185\u7f6e\u7c7b\u578b"
        },
        {
            "location": "/type/build-in/#_2",
            "text": "\u7c7b\u578b  \u8bf4\u660e      id  id\u7c7b\u578b\uff0c\u53ef\u89c6\u4e3a\u5b57\u7b26\u4e32    int  \u6574\u578b    float  \u6d6e\u70b9\u6570    string  \u5b57\u7b26\u4e32    boolean  \u5e03\u5c14\u503c    nonNull  \u975e\u7a7a\u7c7b\u578b    listOf  \u5217\u8868\u7c7b\u578b     \u5176\u4e2d  nonNull  \u548c  listOf  \u7c7b\u578b\u662f\u7528\u6765\u5b9a\u4e49\u5b50\u7c7b\u578b\u7279\u6027\u7684\uff0c\u4f8b\u5982\uff1a  <?php\nuse smilecc\\think\\Support\\Types;\n\n// \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u5141\u8bb8\u4e3anull\u7684string\u7c7b\u578b\nTypes::nonNull(Types::string());\n\n// \u5b9a\u4e49\u4e00\u4e2aint\u7684\u6570\u7ec4\u7c7b\u578b\nTypes::listOf(Types::int());",
            "title": "\u53ef\u7528\u7c7b\u578b"
        },
        {
            "location": "/type/build-in/#_3",
            "text": "int  \u7c7b\u578b\u572832\u4f4dphp\u4e2d\u4f1a\u662f  int32  \u7c7b\u578b\uff0c\u6240\u4ee5\u6ca1\u6709\u529e\u6cd5\u5b58\u50a8\u4f8b\u5982\u624b\u673a\u53f7\u7b49\u8f83\u957f\u6570\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528  float  \u4ee3\u66ff  id  \u7c7b\u578b\u5728json\u8f93\u51fa\u4e2d\u8ba4\u4e3a\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u8fd9\u662f\u4e3a\u4e86\u9488\u5bf9\u4e8e\u4f8b\u5982  uuid  \u7b49\u5b57\u7b26\u7c7b\u578b\u7684id",
            "title": "\u6ce8\u610f"
        },
        {
            "location": "/type/define/",
            "text": "\u81ea\u5b9a\u4e49\u7c7b\u578b\n\n\n\u81ea\u5b9a\u4e49\u7c7b\u578b\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u590d\u5408\u7c7b\u578b\u3002\n\n\n\u5b9a\u4e49\u65b9\u5f0f\n\n\n\u53ea\u8981\u7ee7\u627f\u4e8e \nsmilecc\\think\\Support\\ObjectType\n \u5373\u53ef\u8f7b\u677e\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b \u3002\n\n\n<?php\nnamespace app\\http\\graph\\User;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass UserType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'UserType',\n            'desc' => '\u7528\u6237\u7c7b\u578b'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'id' => Types::id(),\n            'nickname' => Types::string()\n        ];\n    }\n}\n\n\n\n\n\u5b9a\u4e49\u7c7b\u578b\u4e4b\u540e\u53ea\u9700\u8981\u5728 \n/config/graph.php\n \u7684 \ntypes\n \u4e2d\u6ce8\u518c\u8be5\u7c7b\u578b\u7684class\u5373\u53ef\u3002\n\n\n<?php\n\nreturn [\n    'types' => [\n        'user' => \\app\\http\\graph\\User\\UserType::class\n    ]\n];\n\n\n\n\n\u968f\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\n\u7c7b\u578b\u6ce8\u518c\u8868\n\u6765\u4f7f\u7528\u5b83\u4e86\u3002\n\n\n<?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass GraphType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphType',\n            'desc' => ''\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            // \u521a\u624d\u6ce8\u518c\u7684UserType\n            'user' => Types::user()\n        ];\n    }\n}",
            "title": "\u81ea\u5b9a\u4e49\u7c7b\u578b"
        },
        {
            "location": "/type/define/#_1",
            "text": "\u81ea\u5b9a\u4e49\u7c7b\u578b\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u590d\u5408\u7c7b\u578b\u3002",
            "title": "\u81ea\u5b9a\u4e49\u7c7b\u578b"
        },
        {
            "location": "/type/define/#_2",
            "text": "\u53ea\u8981\u7ee7\u627f\u4e8e  smilecc\\think\\Support\\ObjectType  \u5373\u53ef\u8f7b\u677e\u5b9a\u4e49\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b \u3002  <?php\nnamespace app\\http\\graph\\User;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass UserType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'UserType',\n            'desc' => '\u7528\u6237\u7c7b\u578b'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'id' => Types::id(),\n            'nickname' => Types::string()\n        ];\n    }\n}  \u5b9a\u4e49\u7c7b\u578b\u4e4b\u540e\u53ea\u9700\u8981\u5728  /config/graph.php  \u7684  types  \u4e2d\u6ce8\u518c\u8be5\u7c7b\u578b\u7684class\u5373\u53ef\u3002  <?php\n\nreturn [\n    'types' => [\n        'user' => \\app\\http\\graph\\User\\UserType::class\n    ]\n];  \u968f\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 \u7c7b\u578b\u6ce8\u518c\u8868 \u6765\u4f7f\u7528\u5b83\u4e86\u3002  <?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass GraphType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphType',\n            'desc' => ''\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            // \u521a\u624d\u6ce8\u518c\u7684UserType\n            'user' => Types::user()\n        ];\n    }\n}",
            "title": "\u5b9a\u4e49\u65b9\u5f0f"
        },
        {
            "location": "/type/object/",
            "text": "\u5bf9\u8c61\u7c7b\u578b\uff08ObjectType\uff09\n\n\n\u4f7f\u7528\u65b9\u5f0f\n\n\n<?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphQueryType',\n            'desc' => 'think-graphql\u7684\u6f14\u793a\u7c7b\u578b'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'hello_world' => Types::user(),\n            'user' => [\n                'type' => Types::user(),\n                'args' => [\n                    'id' => Types::nonNull(Types::id())\n                ]\n            ]\n        ];\n    }\n\n    public function resolveHelloWorld($val, $args)\n    {\n        return 'hello world!!!';\n    }\n\n    public function resolveUser($val, $args)\n    {\n        return [\n            'id' => $args['id'],\n            'nickname' => 'TestUser',\n            'created_time' => '2018-07-31 17:21:50'\n        ];\n    }\n}\n\n\n\n\n\n\n\nattrs\n \u5b9a\u4e49\u4e86\u8be5Type\u7684\u540d\u79f0\u53ca\u63cf\u8ff0\u3002\n\n\nfields\n \u5b9a\u4e49\u4e86\u8be5Type\u7684\u8fd4\u56de\u5b57\u6bb5\u3002\n\n\n\n\n\u6b64\u4f8b\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u53eb\nhello_world\n\u7684\u5b57\u6bb5\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\nresolveHelloWorld\n\u65b9\u6cd5\u4e3a\u4ed6\u8bbe\u7f6e\u4e00\u4e2a\u503c\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5b57\u6bb5\u4e2d\u4f7f\u7528\u4e0b\u5212\u7ebf\u6216\u5c0f\u9a7c\u5cf0\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5728\nresolve\n\u65f6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5927\u9a7c\u5cf0\u6765\u5904\u7406\u5b83\u3002\n\n\n\u4f8b\u5982\nhello_world\n->\nresolveHelloWorld\n\u3001\ncraeted_time\n->\nresolveCreatedTime\n\u3002\n\n\n\u5728\u4f7f\u7528\u6211\u4eec\u7684\u81ea\u5b9a\u4e49Type\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\u65e2\u53ef\u3002\n\n\npublic function resolveUser($val, $args)\n{\n    return [\n        'id' => $args['id'],\n        'nickname' => 'TestUser',\n        'created_time' => '2018-07-31 17:21:50'\n    ];\n}\n\n\n\n\n\u5728\u81ea\u5b9a\u4e49Type\u7684\u5185\u90e8\uff0c\u5982\u679c\u6211\u4eec\u5728\u5916\u5c42\u8fd4\u56de\u6570\u7ec4\u4e2d\u7684\u5b57\u6bb5\u540d\u548c\u81ea\u5b9a\u4e49Type\u5185\u90e8fields\u4e2d\u8bbe\u7f6e\u7684\u76f8\u540c\uff0c\u90a3\u4e48\u65e0\u9700\u4efb\u4f55\u64cd\u4f5c\uff0c\nthink-graphql\n\u4f1a\u81ea\u52a8\u5e2e\u4f60\u8fd4\u56de\u8be5\u503c\u3002\n\n\n\u5982\u679c\u548c\u5185\u90e8\u5b9a\u4e49\u7684\u4e0d\u4e00\u81f4\u6216\u9700\u8981\u4e8c\u6b21\u5904\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u81ea\u5b9a\u4e49Type\u7684\u5185\u90e8\u5219\u9700\u8981resolve\u8be5\u5b57\u6bb5\u81ea\u5df1\u5904\u7406\u4e00\u4e0b\u3002\n\n\nclass UserType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'UserType',\n            'desc' => '\u7528\u6237\u7c7b\u578b'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'id' => Types::id(),\n            'nickname' => Types::string(),\n            'created_time' => Types::string()\n        ];\n    }\n\n    public function resolveCreatedTime($val)\n    {\n        return strtotime($val['created_time']);\n    }\n}\n\n\n\n\n\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u5c31\u628a\u4e0a\u5c42\u4f20\u9012\u8fc7\u6765\u7684\u6570\u636e \n$val\n \u4e2d\u7684 \ncreated_time\n \u8f6c\u6362\u6210\u65f6\u95f4\u6233\u518d\u8fd4\u56de\u3002\n\n\n\u53ef\u91cd\u5199\u7684\u65b9\u6cd5\n\n\n\n\n\n\n\n\n\u65b9\u6cd5\u540d\n\n\n\u8fd4\u56de\u7c7b\u578b\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nattrs\n\n\narray\n\n\n\u7528\u4e8e\u7c7b\u578b\u5c5e\u6027\n\n\n\n\n\n\nfields\n\n\narray\n\n\n\u7528\u4e8e\u8be5\u7c7b\u578b\u7684\u5b57\u6bb5\n\n\n\n\n\n\nfieldsMap\n\n\narray\n\n\n\u7528\u4e8e\u8bbe\u7f6e\u5b57\u6bb5\u91cd\u6307\u5411\u6570\u636e\u6e90\u4e2d\u7684\u5b57\u6bb5\n\n\n\n\n\n\nresolveField\n\n\nany\n\n\n\u7531\u5b9e\u4f8b\u81ea\u5df1\u5904\u7406\u6240\u6709field\u7684\u6570\u636e\u8fd4\u56de\n\n\n\n\n\n\n\n\nattrs(): array\n\n\n\u5b9a\u4e49\u5f53\u524d\u7c7b\u578b\u7684\u5c5e\u6027\n\n\npublic function attrs()\n{\n    return [\n        'name' => 'ExampleType',\n        'desc' => '\u6f14\u793a\u7c7b\u578b'\n    ];\n}\n\n\n\n\n\n\n\n\n\n\n\u5b57\u6bb5\u540d\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nname\n\n\n\u5fc5\u9700\u7684\n \u5f53\u524d\u7c7b\u578b\u7684\u540d\u79f0\n\n\n\n\n\n\ndesc\n\n\n\u5f53\u524d\u7c7b\u578b\u7684\u63cf\u8ff0\n\n\n\n\n\n\n\n\nfields(): array\n\n\n\u5b9a\u4e49\u5f53\u524d\u7c7b\u578b\u7684\u8fd4\u56de\u5b57\u6bb5\n\n\npublic function fields()\n{\n    return [\n        'simple' => Types::string(),\n        'custom' => [\n            'name' => 'CustomField',\n            'type' => Types::string(),\n            'desc' => '\u81ea\u5b9a\u4e49\u5b57\u6bb5',\n            'args' => [\n                'id' => Types::id(),\n                'example' => [\n                    'name' => 'ExampleArgField',\n                    'type' => Types::string(),\n                    'desc' => '\u5b9e\u4f8b\u53c2\u6570\u5b57\u6bb5',\n                    'defaultValue' => '\u9ed8\u8ba4\u503c'\n                ]\n            ]\n        ]\n    ];\n}\n\n\n\n\n\u4ee5\u4e0b\u662f\u5f53\u5b57\u6bb5\u7c7b\u578b\u4e3a\u4e00\u4e2a\u6570\u7ec4\u65f6\uff0c\u53ef\u9009\u7684\u6570\u7ec4\u6210\u5458\uff1a\n\n\n\n\n\n\n\n\n\u5b57\u6bb5\u540d\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\ntype\n\n\n\u5fc5\u9700\u7684\n \u5b57\u6bb5\u7684\u7c7b\u578b\n\n\n\n\n\n\nname\n\n\n\u5b57\u6bb5\u7684\u540d\u79f0\n\n\n\n\n\n\ndesc\n\n\n\u63cf\u8ff0\n\n\n\n\n\n\nargs\n\n\n\u53c2\u6570\u5217\u8868\n\n\n\n\n\n\ndeprecationReason\n\n\n\u6807\u8bc6\u8fd9\u4e2a\u5b57\u6bb5\u5df2\u7ecf\u5e9f\u5f03\u7684\u539f\u56e0\uff0c\u5f53\u4e0d\u4e3a\u7a7a\u65f6\uff0cGraphQL\u7684\u5185\u7701\u65b9\u6cd5\u4e0d\u518d\u8fd4\u56de\u8be5\u5b57\u6bb5\uff0c\u4f46\u662f\u4ecd\u7136\u80fd\u4f7f\u7528\u8be5\u5b57\u6bb5\u67e5\u8be2\n\n\n\n\n\n\n\n\nargs\u5b57\u6bb5\n\n\n\n\n\n\n\n\n\u5b57\u6bb5\u540d\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\ntype\n\n\n\u5fc5\u9700\u7684\n \u53c2\u6570\u7684\u7c7b\u578b\n\n\n\n\n\n\nname\n\n\n\u53c2\u6570\u7684\u540d\u79f0\n\n\n\n\n\n\ndesc\n\n\n\u63cf\u8ff0\n\n\n\n\n\n\ndefaultValue\n\n\n\u9ed8\u8ba4\u503c\n\n\n\n\n\n\n\n\nfieldsMap(): array\n\n\n\u901a\u8fc7\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u6539\u53d8 \nfields\n \u4e2d\u67d0\u4e2a\u5b57\u6bb5\u5728\u6570\u636e\u6e90\u4e2d\u7684\u6307\u5411\u3002\n\n\n\u4f8b\u5982 \nfields\n \u4e2d\u5b58\u5728\u4e00\u4e2a\u53eb \ntitle\n \u7684\u5b57\u6bb5\uff0c\u4f46\u662f\u5b83\u5728\u6570\u636e\u6e90\u4e2d\u7684\u5b9e\u9645\u5b57\u6bb5\u540d\u53eb \narticle_title\n\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u5c31\u53ef\u4ee5\u5c06\u5176\u6307\u5411\u5230\u5b83\u7684\u5b9e\u9645\u6570\u636e\u6e90\u3002\n\n\npublic function fieldsMap()\n{\n    return [\n        'title' => 'article_title'\n    ];\n}\n\n\n\n\nresolveField($value, $args, $context, $info): any\n\n\n\u6ce8\u610f\n \u5f53\u60a8\u91cd\u5199\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u5019\uff0cthink-graphql\u7684\u81ea\u52a8\u8c03\u7528 \nresolve\u5b57\u6bb5\u540d\n \u548c\u81ea\u52a8\u4ece \n$value\n \u4e2d\u8fd4\u56de\u6570\u636e\u7684\u529f\u80fd\u5c06\n\u5931\u6548\n\uff0c\u800c\u5c06\u4f7f\u7528\u60a8\u5b9a\u4e49\u7684 \nresolveField\n \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002\n\n\n\u6240\u4ee5\u60a8\u53ef\u4ee5\u91cd\u5199\u8fd9\u4e2a\u51fd\u6570\u6765\u81ea\u5b9a\u4e49\u5b57\u6bb5 \nresolve\n \u673a\u5236\uff0c\u4ee5\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5728\u65e0 \nresolve\u5b57\u6bb5\u540d\n \u65b9\u6cd5\u65f6\u8fd4\u56de\u9ed8\u8ba4\u503c \n[]\n \u3002\n\n\npublic function resolveField($val, $args, $context, \\GraphQL\\Type\\Definition\\ResolveInfo $info)\n{\n    $methodName = \"resolve\" . str_replace('_', '', $info->fieldName);\n    if (method_exists($this, $methodName)) {\n        return $this->{$methodName}($val, $args, $context, $info);\n    } else {\n        return [];\n    }\n}",
            "title": "\u5bf9\u8c61\u7c7b\u578b"
        },
        {
            "location": "/type/object/#objecttype",
            "text": "",
            "title": "\u5bf9\u8c61\u7c7b\u578b\uff08ObjectType\uff09"
        },
        {
            "location": "/type/object/#_1",
            "text": "<?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphQueryType',\n            'desc' => 'think-graphql\u7684\u6f14\u793a\u7c7b\u578b'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'hello_world' => Types::user(),\n            'user' => [\n                'type' => Types::user(),\n                'args' => [\n                    'id' => Types::nonNull(Types::id())\n                ]\n            ]\n        ];\n    }\n\n    public function resolveHelloWorld($val, $args)\n    {\n        return 'hello world!!!';\n    }\n\n    public function resolveUser($val, $args)\n    {\n        return [\n            'id' => $args['id'],\n            'nickname' => 'TestUser',\n            'created_time' => '2018-07-31 17:21:50'\n        ];\n    }\n}   attrs  \u5b9a\u4e49\u4e86\u8be5Type\u7684\u540d\u79f0\u53ca\u63cf\u8ff0\u3002  fields  \u5b9a\u4e49\u4e86\u8be5Type\u7684\u8fd4\u56de\u5b57\u6bb5\u3002   \u6b64\u4f8b\u4e2d\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u53eb hello_world \u7684\u5b57\u6bb5\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a resolveHelloWorld \u65b9\u6cd5\u4e3a\u4ed6\u8bbe\u7f6e\u4e00\u4e2a\u503c\u3002  \u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5b57\u6bb5\u4e2d\u4f7f\u7528\u4e0b\u5212\u7ebf\u6216\u5c0f\u9a7c\u5cf0\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5728 resolve \u65f6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5927\u9a7c\u5cf0\u6765\u5904\u7406\u5b83\u3002  \u4f8b\u5982 hello_world -> resolveHelloWorld \u3001 craeted_time -> resolveCreatedTime \u3002  \u5728\u4f7f\u7528\u6211\u4eec\u7684\u81ea\u5b9a\u4e49Type\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\u65e2\u53ef\u3002  public function resolveUser($val, $args)\n{\n    return [\n        'id' => $args['id'],\n        'nickname' => 'TestUser',\n        'created_time' => '2018-07-31 17:21:50'\n    ];\n}  \u5728\u81ea\u5b9a\u4e49Type\u7684\u5185\u90e8\uff0c\u5982\u679c\u6211\u4eec\u5728\u5916\u5c42\u8fd4\u56de\u6570\u7ec4\u4e2d\u7684\u5b57\u6bb5\u540d\u548c\u81ea\u5b9a\u4e49Type\u5185\u90e8fields\u4e2d\u8bbe\u7f6e\u7684\u76f8\u540c\uff0c\u90a3\u4e48\u65e0\u9700\u4efb\u4f55\u64cd\u4f5c\uff0c think-graphql \u4f1a\u81ea\u52a8\u5e2e\u4f60\u8fd4\u56de\u8be5\u503c\u3002  \u5982\u679c\u548c\u5185\u90e8\u5b9a\u4e49\u7684\u4e0d\u4e00\u81f4\u6216\u9700\u8981\u4e8c\u6b21\u5904\u7406\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u81ea\u5b9a\u4e49Type\u7684\u5185\u90e8\u5219\u9700\u8981resolve\u8be5\u5b57\u6bb5\u81ea\u5df1\u5904\u7406\u4e00\u4e0b\u3002  class UserType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'UserType',\n            'desc' => '\u7528\u6237\u7c7b\u578b'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'id' => Types::id(),\n            'nickname' => Types::string(),\n            'created_time' => Types::string()\n        ];\n    }\n\n    public function resolveCreatedTime($val)\n    {\n        return strtotime($val['created_time']);\n    }\n}  \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u5c31\u628a\u4e0a\u5c42\u4f20\u9012\u8fc7\u6765\u7684\u6570\u636e  $val  \u4e2d\u7684  created_time  \u8f6c\u6362\u6210\u65f6\u95f4\u6233\u518d\u8fd4\u56de\u3002",
            "title": "\u4f7f\u7528\u65b9\u5f0f"
        },
        {
            "location": "/type/object/#_2",
            "text": "\u65b9\u6cd5\u540d  \u8fd4\u56de\u7c7b\u578b  \u8bf4\u660e      attrs  array  \u7528\u4e8e\u7c7b\u578b\u5c5e\u6027    fields  array  \u7528\u4e8e\u8be5\u7c7b\u578b\u7684\u5b57\u6bb5    fieldsMap  array  \u7528\u4e8e\u8bbe\u7f6e\u5b57\u6bb5\u91cd\u6307\u5411\u6570\u636e\u6e90\u4e2d\u7684\u5b57\u6bb5    resolveField  any  \u7531\u5b9e\u4f8b\u81ea\u5df1\u5904\u7406\u6240\u6709field\u7684\u6570\u636e\u8fd4\u56de",
            "title": "\u53ef\u91cd\u5199\u7684\u65b9\u6cd5"
        },
        {
            "location": "/type/object/#attrs-array",
            "text": "\u5b9a\u4e49\u5f53\u524d\u7c7b\u578b\u7684\u5c5e\u6027  public function attrs()\n{\n    return [\n        'name' => 'ExampleType',\n        'desc' => '\u6f14\u793a\u7c7b\u578b'\n    ];\n}     \u5b57\u6bb5\u540d  \u8bf4\u660e      name  \u5fc5\u9700\u7684  \u5f53\u524d\u7c7b\u578b\u7684\u540d\u79f0    desc  \u5f53\u524d\u7c7b\u578b\u7684\u63cf\u8ff0",
            "title": "attrs(): array"
        },
        {
            "location": "/type/object/#fields-array",
            "text": "\u5b9a\u4e49\u5f53\u524d\u7c7b\u578b\u7684\u8fd4\u56de\u5b57\u6bb5  public function fields()\n{\n    return [\n        'simple' => Types::string(),\n        'custom' => [\n            'name' => 'CustomField',\n            'type' => Types::string(),\n            'desc' => '\u81ea\u5b9a\u4e49\u5b57\u6bb5',\n            'args' => [\n                'id' => Types::id(),\n                'example' => [\n                    'name' => 'ExampleArgField',\n                    'type' => Types::string(),\n                    'desc' => '\u5b9e\u4f8b\u53c2\u6570\u5b57\u6bb5',\n                    'defaultValue' => '\u9ed8\u8ba4\u503c'\n                ]\n            ]\n        ]\n    ];\n}  \u4ee5\u4e0b\u662f\u5f53\u5b57\u6bb5\u7c7b\u578b\u4e3a\u4e00\u4e2a\u6570\u7ec4\u65f6\uff0c\u53ef\u9009\u7684\u6570\u7ec4\u6210\u5458\uff1a     \u5b57\u6bb5\u540d  \u8bf4\u660e      type  \u5fc5\u9700\u7684  \u5b57\u6bb5\u7684\u7c7b\u578b    name  \u5b57\u6bb5\u7684\u540d\u79f0    desc  \u63cf\u8ff0    args  \u53c2\u6570\u5217\u8868    deprecationReason  \u6807\u8bc6\u8fd9\u4e2a\u5b57\u6bb5\u5df2\u7ecf\u5e9f\u5f03\u7684\u539f\u56e0\uff0c\u5f53\u4e0d\u4e3a\u7a7a\u65f6\uff0cGraphQL\u7684\u5185\u7701\u65b9\u6cd5\u4e0d\u518d\u8fd4\u56de\u8be5\u5b57\u6bb5\uff0c\u4f46\u662f\u4ecd\u7136\u80fd\u4f7f\u7528\u8be5\u5b57\u6bb5\u67e5\u8be2",
            "title": "fields(): array"
        },
        {
            "location": "/type/object/#args",
            "text": "\u5b57\u6bb5\u540d  \u8bf4\u660e      type  \u5fc5\u9700\u7684  \u53c2\u6570\u7684\u7c7b\u578b    name  \u53c2\u6570\u7684\u540d\u79f0    desc  \u63cf\u8ff0    defaultValue  \u9ed8\u8ba4\u503c",
            "title": "args\u5b57\u6bb5"
        },
        {
            "location": "/type/object/#fieldsmap-array",
            "text": "\u901a\u8fc7\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u6539\u53d8  fields  \u4e2d\u67d0\u4e2a\u5b57\u6bb5\u5728\u6570\u636e\u6e90\u4e2d\u7684\u6307\u5411\u3002  \u4f8b\u5982  fields  \u4e2d\u5b58\u5728\u4e00\u4e2a\u53eb  title  \u7684\u5b57\u6bb5\uff0c\u4f46\u662f\u5b83\u5728\u6570\u636e\u6e90\u4e2d\u7684\u5b9e\u9645\u5b57\u6bb5\u540d\u53eb  article_title \uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u5982\u4e0b\u4ee3\u7801\u5c31\u53ef\u4ee5\u5c06\u5176\u6307\u5411\u5230\u5b83\u7684\u5b9e\u9645\u6570\u636e\u6e90\u3002  public function fieldsMap()\n{\n    return [\n        'title' => 'article_title'\n    ];\n}",
            "title": "fieldsMap(): array"
        },
        {
            "location": "/type/object/#resolvefieldvalue-args-context-info-any",
            "text": "\u6ce8\u610f  \u5f53\u60a8\u91cd\u5199\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u5019\uff0cthink-graphql\u7684\u81ea\u52a8\u8c03\u7528  resolve\u5b57\u6bb5\u540d  \u548c\u81ea\u52a8\u4ece  $value  \u4e2d\u8fd4\u56de\u6570\u636e\u7684\u529f\u80fd\u5c06 \u5931\u6548 \uff0c\u800c\u5c06\u4f7f\u7528\u60a8\u5b9a\u4e49\u7684  resolveField  \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002  \u6240\u4ee5\u60a8\u53ef\u4ee5\u91cd\u5199\u8fd9\u4e2a\u51fd\u6570\u6765\u81ea\u5b9a\u4e49\u5b57\u6bb5  resolve  \u673a\u5236\uff0c\u4ee5\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\u662f\u5728\u65e0  resolve\u5b57\u6bb5\u540d  \u65b9\u6cd5\u65f6\u8fd4\u56de\u9ed8\u8ba4\u503c  []  \u3002  public function resolveField($val, $args, $context, \\GraphQL\\Type\\Definition\\ResolveInfo $info)\n{\n    $methodName = \"resolve\" . str_replace('_', '', $info->fieldName);\n    if (method_exists($this, $methodName)) {\n        return $this->{$methodName}($val, $args, $context, $info);\n    } else {\n        return [];\n    }\n}",
            "title": "resolveField($value, $args, $context, $info): any"
        },
        {
            "location": "/type/mutation-input/",
            "text": "\u53d8\u66f4\u4e0e\u8f93\u5165\u7c7b\u578b\n\n\nGraphQL \u7684\u5927\u90e8\u5206\u8ba8\u8bba\u96c6\u4e2d\u5728\u6570\u636e\u83b7\u53d6\uff0c\u4f46\u662f\u4efb\u4f55\u5b8c\u6574\u7684\u6570\u636e\u5e73\u53f0\u4e5f\u90fd\u9700\u8981\u4e00\u4e2a\u6539\u53d8\u670d\u52a1\u7aef\u6570\u636e\u7684\u65b9\u6cd5\u3002\n\n\n\u53d8\u66f4\uff08Mutation\uff09\n\n\n\u5982\u679c\u60a8\u8fd8\u4e0d\u4e86\u89e3\nMutation\n\u5efa\u8bae\u60a8\u5148\u9605\u8bfb\nMutation\u7684\u5b98\u65b9\u6587\u6863\n\u3002\n\n\n\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0cMutation\u8fd9\u4e2a\u5b57\u6bb5\u53ea\u662f\u5e26\u6709\u53c2\u6570\u8bf7\u6c42\u7684\u5e38\u89c4\u7c7b\u578b\uff0c\u666e\u901a\u7684 \nquery\n \u8bf7\u6c42\u548c\u5e26\u6709\u53c2\u6570\u7684\u53d8\u66f4\uff08Mutation\uff09\u5e76\u6ca1\u6709\u5b9e\u9645\u4e0a\u7684\u5dee\u522b\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u8bed\u6cd5\u4e0a\u7684\u5b9a\u4e49\u3002\n\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u53d8\u66f4\u64cd\u4f5c\uff1a\n\n\nmutation UserRegister($tel: String, $pwd: String) {\n  createUser(telephone: $tel, password: $pwd) {\n    id\n    token\n  }\n}\n\n\n\n\n\u4e3a\u4e86\u6267\u884c\u4ee5\u4e0a\u8bf7\u6c42\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u7c7b\u578b\u6765\u54cd\u5e94\u8fd9\u4e2a\u8bf7\u6c42\u3002\n\n\n<?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryMutationType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphQueryType'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'createUser' => [\n                'type' => new ObjectType([\n                    'name' => 'UserType',\n                    'desc' => '\u6d4b\u8bd5\u7528\u6237\u7c7b\u578b',\n                    'fields' => [\n                        'id' => Types::id(),\n                        'token' => Types::string()\n                    ]\n                ]),\n                'args' => [\n                    'telephone' => Types::string(),\n                    'password' => Types::string()\n                ]\n            ]\n        ];\n    }\n\n    public function resolveCreateUser($val, $args)\n    {\n        return [\n            'id' => 1001,\n            'token' => 'test'\n        ];\n    }\n}\n\n\n\n\n\u8f93\u5165\u7c7b\u578b\uff08InputObjectType\uff09\n\n\nGraphQL\u4e2d\u4e3a\u53ef\u4ee5\u4e3a\u590d\u6742\u7684\u8f93\u5165\u5b9a\u4e49\u8f93\u5165\u7c7b\u578b\uff0c\u5b83\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u5f53\u8f93\u5165\u7684\u6570\u636e\u975e\u5e38\u591a\u7684\u65f6\u5019\uff0c\u5982\u679c\u5728\u53c2\u6570\u4e2d\u4e00\u4e2a\u4e00\u4e2a\u8f93\u5165\u672a\u514d\u592a\u8fc7\u9ebb\u70e6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5b9a\u4e49\u6210\u8f93\u5165\u7c7b\u578b\u7136\u540e\u5728 \nvariables\n \u4e2d\u4f20\u5165\u3002\n\n\nGraphQL\u5bf9\u4e8e\u8f93\u5165\u7c7b\u578b\u7684\n\u5b98\u65b9\u6587\u6863\u5728\u6b64\n\u3002\n\n\n\u5728 \nthink-graphql\n \u4e2d\uff0c\u8f93\u5165\u7c7b\u578b\u662f \nsmilecc\\think\\Support\\InputObjectType\n \uff08\u6216\u5b83\u5b50\u7c7b\uff09\u7684\u5b9e\u4f8b\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4\u6784\u9020\u5b83\u3002\n\n\n<?php\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\InputObjectType;\n\n$userInputType = new InputObjectType([\n    'name' => 'UserInputType',\n    'desc' => '\u7528\u6237\u7684\u8f93\u5165\u7c7b\u578b',\n    'fields' => [\n        'telephone' => Types::string(),\n        'password' => Types::string()\n    ]\n])\n\n\n\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\nInputObjectType\n \u7c7b\u4f3c\u4e8e \nObjectType\n\uff0c\u53ea\u662f\u6ca1\u6709 \nargs\n\u3002\n\n\n\u4f7f\u7528\u8f93\u5165\u7c7b\u578b\n\n\n<?php\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\nuse \\smilecc\\think\\Support\\InputObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphQueryType'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'createUser' => [\n                'type' => Types::user(),\n                'args' => [\n                    'user' => new InputObjectType([\n                        'name' => 'UserInputType',\n                        'desc' => '\u7528\u6237\u7684\u8f93\u5165\u7c7b\u578b',\n                        'fields' => [\n                            'telephone' => Types::string(),\n                            'password' => Types::string()\n                        ]\n                    ])\n                ]\n            ]\n        ];\n    }\n\n    public function resolveCreateUser($val, $args)\n    {\n        // \u6211\u4eec\u8f93\u5165\u7684\u6570\u636e\n        $user = $args['user'];\n    }\n}\n\n\n\n\n\u968f\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728 \nmutation\n \u65f6\u901a\u8fc7 \nvariables\n \u4f20\u5165\u7528\u6237\u6570\u636e\u4e86\u3002\n\n\n\u8bf7\u6c42\u5185\u5bb9\uff1a\n\n\nmutation createUser($user: UserInputType) {\n  createUser(user: $user) {\n    id\n    token\n  }\n}\n\n\n\n\nvariables \u5185\u5bb9\uff1a\n\n\n{\n  \"user\": {\n    \"telephone\": \"123\",\n    \"password\": \"abc\"\n  }\n}",
            "title": "\u53d8\u66f4\u4e0e\u8f93\u5165\u7c7b\u578b"
        },
        {
            "location": "/type/mutation-input/#_1",
            "text": "GraphQL \u7684\u5927\u90e8\u5206\u8ba8\u8bba\u96c6\u4e2d\u5728\u6570\u636e\u83b7\u53d6\uff0c\u4f46\u662f\u4efb\u4f55\u5b8c\u6574\u7684\u6570\u636e\u5e73\u53f0\u4e5f\u90fd\u9700\u8981\u4e00\u4e2a\u6539\u53d8\u670d\u52a1\u7aef\u6570\u636e\u7684\u65b9\u6cd5\u3002",
            "title": "\u53d8\u66f4\u4e0e\u8f93\u5165\u7c7b\u578b"
        },
        {
            "location": "/type/mutation-input/#mutation",
            "text": "\u5982\u679c\u60a8\u8fd8\u4e0d\u4e86\u89e3 Mutation \u5efa\u8bae\u60a8\u5148\u9605\u8bfb Mutation\u7684\u5b98\u65b9\u6587\u6863 \u3002  \u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0cMutation\u8fd9\u4e2a\u5b57\u6bb5\u53ea\u662f\u5e26\u6709\u53c2\u6570\u8bf7\u6c42\u7684\u5e38\u89c4\u7c7b\u578b\uff0c\u666e\u901a\u7684  query  \u8bf7\u6c42\u548c\u5e26\u6709\u53c2\u6570\u7684\u53d8\u66f4\uff08Mutation\uff09\u5e76\u6ca1\u6709\u5b9e\u9645\u4e0a\u7684\u5dee\u522b\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u8bed\u6cd5\u4e0a\u7684\u5b9a\u4e49\u3002  \u4ee5\u4e0b\u662f\u4e00\u4e2a\u53d8\u66f4\u64cd\u4f5c\uff1a  mutation UserRegister($tel: String, $pwd: String) {\n  createUser(telephone: $tel, password: $pwd) {\n    id\n    token\n  }\n}  \u4e3a\u4e86\u6267\u884c\u4ee5\u4e0a\u8bf7\u6c42\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u7c7b\u578b\u6765\u54cd\u5e94\u8fd9\u4e2a\u8bf7\u6c42\u3002  <?php\nnamespace app\\http\\graph;\n\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\n\nclass QueryMutationType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphQueryType'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'createUser' => [\n                'type' => new ObjectType([\n                    'name' => 'UserType',\n                    'desc' => '\u6d4b\u8bd5\u7528\u6237\u7c7b\u578b',\n                    'fields' => [\n                        'id' => Types::id(),\n                        'token' => Types::string()\n                    ]\n                ]),\n                'args' => [\n                    'telephone' => Types::string(),\n                    'password' => Types::string()\n                ]\n            ]\n        ];\n    }\n\n    public function resolveCreateUser($val, $args)\n    {\n        return [\n            'id' => 1001,\n            'token' => 'test'\n        ];\n    }\n}",
            "title": "\u53d8\u66f4\uff08Mutation\uff09"
        },
        {
            "location": "/type/mutation-input/#inputobjecttype",
            "text": "GraphQL\u4e2d\u4e3a\u53ef\u4ee5\u4e3a\u590d\u6742\u7684\u8f93\u5165\u5b9a\u4e49\u8f93\u5165\u7c7b\u578b\uff0c\u5b83\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u5f53\u8f93\u5165\u7684\u6570\u636e\u975e\u5e38\u591a\u7684\u65f6\u5019\uff0c\u5982\u679c\u5728\u53c2\u6570\u4e2d\u4e00\u4e2a\u4e00\u4e2a\u8f93\u5165\u672a\u514d\u592a\u8fc7\u9ebb\u70e6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5b9a\u4e49\u6210\u8f93\u5165\u7c7b\u578b\u7136\u540e\u5728  variables  \u4e2d\u4f20\u5165\u3002  GraphQL\u5bf9\u4e8e\u8f93\u5165\u7c7b\u578b\u7684 \u5b98\u65b9\u6587\u6863\u5728\u6b64 \u3002  \u5728  think-graphql  \u4e2d\uff0c\u8f93\u5165\u7c7b\u578b\u662f  smilecc\\think\\Support\\InputObjectType  \uff08\u6216\u5b83\u5b50\u7c7b\uff09\u7684\u5b9e\u4f8b\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4\u6784\u9020\u5b83\u3002  <?php\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\InputObjectType;\n\n$userInputType = new InputObjectType([\n    'name' => 'UserInputType',\n    'desc' => '\u7528\u6237\u7684\u8f93\u5165\u7c7b\u578b',\n    'fields' => [\n        'telephone' => Types::string(),\n        'password' => Types::string()\n    ]\n])  \u53ef\u4ee5\u770b\u51fa\uff0c InputObjectType  \u7c7b\u4f3c\u4e8e  ObjectType \uff0c\u53ea\u662f\u6ca1\u6709  args \u3002",
            "title": "\u8f93\u5165\u7c7b\u578b\uff08InputObjectType\uff09"
        },
        {
            "location": "/type/mutation-input/#_2",
            "text": "<?php\nuse \\smilecc\\think\\Support\\Types;\nuse \\smilecc\\think\\Support\\ObjectType;\nuse \\smilecc\\think\\Support\\InputObjectType;\n\nclass QueryType extends ObjectType\n{\n    public function attrs()\n    {\n        return [\n            'name' => 'GraphQueryType'\n        ];\n    }\n\n    public function fields()\n    {\n        return [\n            'createUser' => [\n                'type' => Types::user(),\n                'args' => [\n                    'user' => new InputObjectType([\n                        'name' => 'UserInputType',\n                        'desc' => '\u7528\u6237\u7684\u8f93\u5165\u7c7b\u578b',\n                        'fields' => [\n                            'telephone' => Types::string(),\n                            'password' => Types::string()\n                        ]\n                    ])\n                ]\n            ]\n        ];\n    }\n\n    public function resolveCreateUser($val, $args)\n    {\n        // \u6211\u4eec\u8f93\u5165\u7684\u6570\u636e\n        $user = $args['user'];\n    }\n}  \u968f\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728  mutation  \u65f6\u901a\u8fc7  variables  \u4f20\u5165\u7528\u6237\u6570\u636e\u4e86\u3002  \u8bf7\u6c42\u5185\u5bb9\uff1a  mutation createUser($user: UserInputType) {\n  createUser(user: $user) {\n    id\n    token\n  }\n}  variables \u5185\u5bb9\uff1a  {\n  \"user\": {\n    \"telephone\": \"123\",\n    \"password\": \"abc\"\n  }\n}",
            "title": "\u4f7f\u7528\u8f93\u5165\u7c7b\u578b"
        },
        {
            "location": "/type/scalar-enum/",
            "text": "\u6807\u91cf\u4e0e\u679a\u4e3e\n\n\n\u6807\u91cf\n\n\n\u6b63\u5728\u5f00\u53d1\u4e2d\uff0c\u76ee\u524d\u53ef\u4ee5\u4f7f\u7528 \ngraphql-php\u4e2d\u7684\u6807\u91cf\u7c7b\u578b\u5b9a\u4e49\n \u529e\u6cd5\u53bb\u5b9a\u4e49\u6807\u91cf\u3002\n\n\n\u679a\u4e3e\n\n\n\u6b63\u5728\u5f00\u53d1\u4e2d\uff0c\u76ee\u524d\u53ef\u4ee5\u4f7f\u7528 \ngraphql-php\u4e2d\u7684\u679a\u4e3e\u7c7b\u578b\u5b9a\u4e49\n \u529e\u6cd5\u53bb\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u3002",
            "title": "\u6807\u91cf\u4e0e\u679a\u4e3e"
        },
        {
            "location": "/type/scalar-enum/#_1",
            "text": "",
            "title": "\u6807\u91cf\u4e0e\u679a\u4e3e"
        },
        {
            "location": "/type/scalar-enum/#_2",
            "text": "\u6b63\u5728\u5f00\u53d1\u4e2d\uff0c\u76ee\u524d\u53ef\u4ee5\u4f7f\u7528  graphql-php\u4e2d\u7684\u6807\u91cf\u7c7b\u578b\u5b9a\u4e49  \u529e\u6cd5\u53bb\u5b9a\u4e49\u6807\u91cf\u3002",
            "title": "\u6807\u91cf"
        },
        {
            "location": "/type/scalar-enum/#_3",
            "text": "\u6b63\u5728\u5f00\u53d1\u4e2d\uff0c\u76ee\u524d\u53ef\u4ee5\u4f7f\u7528  graphql-php\u4e2d\u7684\u679a\u4e3e\u7c7b\u578b\u5b9a\u4e49  \u529e\u6cd5\u53bb\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u3002",
            "title": "\u679a\u4e3e"
        },
        {
            "location": "/command/",
            "text": "\u547d\u4ee4\u884c\n\n\nthink-graphql\n \u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u3001\u4fbf\u6377\u7684\u547d\u4ee4\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u9700\u8981\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u6709 \nphp\n\u3002\n\n\n\u4ee5\u4e0b\u6240\u6709\u547d\u4ee4\u7684\u524d\u7f00\u90fd\u662f \nphp think graph\n\uff0c\u4e14\u9700\u8981\u5728\u7ad9\u70b9\u7684\u6839\u76ee\u5f55\u4e2d\u8fd0\u884c\u3002\n\n\n$ php think graph init\n\n\n\n\n\u521d\u59cb\u5316\n\n\n$ php think graph init\n\n\n\n\n\n\n\n\n\n\n\u53ef\u9009\u53c2\u6570\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\nforce\n\n\n\u5f3a\u5236\u91cd\u65b0\u521d\u59cb\u5316\uff0c\n\u4f1a\u8986\u76d6\u6389\u4e4b\u524d\u7684\u914d\u7f6e\n\uff0c\u8bf7\u5c0f\u5fc3\u4f7f\u7528\uff0c\u4f8b\u5982 \nphp think graph init --force\n\n\n\n\n\n\n\n\n\u521b\u5efa\n\n\n\u521b\u5efa\u6a21\u7248\u6587\u4ef6\uff0c\u76ee\u524d\u652f\u6301\u751f\u6210\nObjectType\n\u6a21\u7248\u3002\n\n\n$ php think graph make --type http/BlogType\n\n\n\n\n\n\n\n\n\n\n\u53ef\u9009\u53c2\u6570\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\ntype\n\n\n\u751f\u6210\u4e00\u4e2a\nObjectType\n\u6a21\u7248\u6587\u4ef6\uff0c\u751f\u6210\u51fa\u6765\u7684\u6587\u4ef6\u5c06\u4f1a\u5728\napplication\n\u6587\u4ef6\u5939\u7684\u5bf9\u5e94\u8def\u5f84\u4e2d\uff0c\u4f8b\u5982 \nphp think graph make --type http/BlogType\n\u5c06\u4f1a\u751f\u6210\n/application/http/BlogType.php\n\n\n\n\n\n\nforce\n\n\n\u5f3a\u5236\u91cd\u65b0\u751f\u6210\u6a21\u7248\u6587\u4ef6\uff0c\u4f8b\u5982 \nphp think graph make --type http/BlogTyp --force",
            "title": "\u547d\u4ee4\u884c"
        },
        {
            "location": "/command/#_1",
            "text": "think-graphql  \u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u3001\u4fbf\u6377\u7684\u547d\u4ee4\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u9700\u8981\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u6709  php \u3002  \u4ee5\u4e0b\u6240\u6709\u547d\u4ee4\u7684\u524d\u7f00\u90fd\u662f  php think graph \uff0c\u4e14\u9700\u8981\u5728\u7ad9\u70b9\u7684\u6839\u76ee\u5f55\u4e2d\u8fd0\u884c\u3002  $ php think graph init",
            "title": "\u547d\u4ee4\u884c"
        },
        {
            "location": "/command/#_2",
            "text": "$ php think graph init     \u53ef\u9009\u53c2\u6570  \u8bf4\u660e      force  \u5f3a\u5236\u91cd\u65b0\u521d\u59cb\u5316\uff0c \u4f1a\u8986\u76d6\u6389\u4e4b\u524d\u7684\u914d\u7f6e \uff0c\u8bf7\u5c0f\u5fc3\u4f7f\u7528\uff0c\u4f8b\u5982  php think graph init --force",
            "title": "\u521d\u59cb\u5316"
        },
        {
            "location": "/command/#_3",
            "text": "\u521b\u5efa\u6a21\u7248\u6587\u4ef6\uff0c\u76ee\u524d\u652f\u6301\u751f\u6210 ObjectType \u6a21\u7248\u3002  $ php think graph make --type http/BlogType     \u53ef\u9009\u53c2\u6570  \u8bf4\u660e      type  \u751f\u6210\u4e00\u4e2a ObjectType \u6a21\u7248\u6587\u4ef6\uff0c\u751f\u6210\u51fa\u6765\u7684\u6587\u4ef6\u5c06\u4f1a\u5728 application \u6587\u4ef6\u5939\u7684\u5bf9\u5e94\u8def\u5f84\u4e2d\uff0c\u4f8b\u5982  php think graph make --type http/BlogType \u5c06\u4f1a\u751f\u6210 /application/http/BlogType.php    force  \u5f3a\u5236\u91cd\u65b0\u751f\u6210\u6a21\u7248\u6587\u4ef6\uff0c\u4f8b\u5982  php think graph make --type http/BlogTyp --force",
            "title": "\u521b\u5efa"
        },
        {
            "location": "/middleware/",
            "text": "\u4e2d\u95f4\u4ef6\n\n\nthink-graphql\n \u7684\u4e2d\u95f4\u4ef6\u7528\u4e8e\u5728\u8bf7\u6c42\u65f6\u5904\u7406\u6216\u62e6\u622a\u7528\u6237\u8bf7\u6c42\uff0c\nthink-graphql\n \u7684\u4e2d\u95f4\u4ef6\u53ea\u5bf9GraphQL\u7684\u63a5\u53e3\u751f\u6548\u3002\n\n\n\u5b9a\u4e49\u4e2d\u95f4\u4ef6\n\n\n\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684\u65b9\u6cd5\u53c2\u89c1 \nThinkPHP\u7684\u4e2d\u95f4\u4ef6\n\u3002\n\n\n\u6240\u4f7f\u7528\u7684\u4e2d\u95f4\u4ef6\u7c7b\u7684\u793a\u4f8b\u5982\u4e0b\u3002\n\n\n<?php\n\nnamespace app\\http\\middleware;\n\nclass Check\n{\n    public function handle($request, \\Closure $next)\n    {\n        if ($request->param('name') == 'think') {\n            return redirect('index/think');\n        }\n\n        return $next($request);\n    }\n}\n\n\n\n\n\u6ce8\u518c\u4e2d\u95f4\u4ef6\n\n\n\u5728 \n/config/graph.php\n \u4e2d\u627e\u5230 \nmiddleware\n \u914d\u7f6e\u6570\u7ec4\uff0c\u5c06\u4f60\u5b9a\u4e49\u7684\u4e2d\u95f4\u4ef6\u52a0\u5165\u5373\u53ef\u3002\n\n\n'middleware' => [\n    app\\http\\middleware\\Check::class\n]\n\n\n\n\n\u6216\n\n\n'middleware' => app\\http\\middleware\\Check::class",
            "title": "\u4e2d\u95f4\u4ef6"
        },
        {
            "location": "/middleware/#_1",
            "text": "think-graphql  \u7684\u4e2d\u95f4\u4ef6\u7528\u4e8e\u5728\u8bf7\u6c42\u65f6\u5904\u7406\u6216\u62e6\u622a\u7528\u6237\u8bf7\u6c42\uff0c think-graphql  \u7684\u4e2d\u95f4\u4ef6\u53ea\u5bf9GraphQL\u7684\u63a5\u53e3\u751f\u6548\u3002",
            "title": "\u4e2d\u95f4\u4ef6"
        },
        {
            "location": "/middleware/#_2",
            "text": "\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684\u65b9\u6cd5\u53c2\u89c1  ThinkPHP\u7684\u4e2d\u95f4\u4ef6 \u3002  \u6240\u4f7f\u7528\u7684\u4e2d\u95f4\u4ef6\u7c7b\u7684\u793a\u4f8b\u5982\u4e0b\u3002  <?php\n\nnamespace app\\http\\middleware;\n\nclass Check\n{\n    public function handle($request, \\Closure $next)\n    {\n        if ($request->param('name') == 'think') {\n            return redirect('index/think');\n        }\n\n        return $next($request);\n    }\n}",
            "title": "\u5b9a\u4e49\u4e2d\u95f4\u4ef6"
        },
        {
            "location": "/middleware/#_3",
            "text": "\u5728  /config/graph.php  \u4e2d\u627e\u5230  middleware  \u914d\u7f6e\u6570\u7ec4\uff0c\u5c06\u4f60\u5b9a\u4e49\u7684\u4e2d\u95f4\u4ef6\u52a0\u5165\u5373\u53ef\u3002  'middleware' => [\n    app\\http\\middleware\\Check::class\n]  \u6216  'middleware' => app\\http\\middleware\\Check::class",
            "title": "\u6ce8\u518c\u4e2d\u95f4\u4ef6"
        }
    ]
}